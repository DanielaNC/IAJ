{
	"root":
		{
			"classId": 0,
			"ScenarioName": "Scenario1",
			"Description": "Peter was hungry so he went to a restaurant. Once there he ordered a hotdog. The waiter told him they only served hamburgers. Peter told the waiter that was okay as well. After a while the waiter brought Peter his food. The hamburger was burnt to a crisp. Peter complained to the waiter. The waiter told Peter they had no more hamburgers. Peter immediately left the restaurant without paying",
			"Dialogues": [
				{
					"CurrentState": "Order",
					"NextState": "OrderResponse",
					"Meaning": "-",
					"Style": "Polite",
					"Utterance": "I would like a Hotdog please",
					"UtteranceId": "TTS-568479E20C219F45CECA1DE50B94E523"
				}, 
				{
					"CurrentState": "OrderBurger",
					"NextState": "ServeFood",
					"Meaning": "-",
					"Style": "Rude",
					"Utterance": "Then give me a damn burger",
					"UtteranceId": "TTS-D6CD0C9E07A3E2C6202D2286724EEFF3"
				}, 
				{
					"CurrentState": "OrderBurger",
					"NextState": "ServeFood",
					"Meaning": "-",
					"Style": "Polite",
					"Utterance": "I'll have a Burger, then",
					"UtteranceId": "TTS-C048E85D9E5957A378DB2662BC475FC1"
				}, 
				{
					"CurrentState": "Complain",
					"NextState": "AnswerComplaint",
					"Meaning": "-",
					"Style": "Rude",
					"Utterance": "Are you kidding me?! I'm starving over here!",
					"UtteranceId": "TTS-A0BBA27B9927E60EA729D3890BADC07D"
				}, 
				{
					"CurrentState": "OrderResponse",
					"NextState": "OrderBurger",
					"Meaning": "-",
					"Style": "Polite",
					"Utterance": "I'm sorry, sir. We only serve Burgers",
					"UtteranceId": "TTS-795BF8B410C2360564BA93972A9A642D"
				}, 
				{
					"CurrentState": "Leave2Response",
					"NextState": "Leave1",
					"Meaning": "-",
					"Style": "Rude",
					"Utterance": "Don't make me call the cops. You can't leave without paying",
					"UtteranceId": "TTS-BDBCB6BF828582ECE4CD6DE0F132B311"
				}, 
				{
					"CurrentState": "Start",
					"NextState": "StartWaiter",
					"Meaning": "-",
					"Style": "Polite",
					"Utterance": "Good Afternoon",
					"UtteranceId": "TTS-91145E15F72DF3A48A9E83CAE7E3BED7"
				}, 
				{
					"CurrentState": "StartWaiter",
					"NextState": "Complain",
					"Meaning": "-",
					"Style": "-",
					"Utterance": "I'm sorry, sir. You'll have to wait a little bit",
					"UtteranceId": "TTS-238C336B74E03117345682FA1F70D27C"
				}, 
				{
					"CurrentState": "Start",
					"NextState": "StartWaiter",
					"Meaning": "-",
					"Style": "-",
					"Utterance": "Hello?",
					"UtteranceId": "TTS-3809718A10A0F59BCF6D4939C10FD28D"
				}, 
				{
					"CurrentState": "Order",
					"NextState": "OrderResponse",
					"Meaning": "-",
					"Style": "Rude",
					"Utterance": "Gimme a hotdog",
					"UtteranceId": "TTS-9AC6E0EDE884057893397F25FF671B25"
				}, 
				{
					"CurrentState": "Refund",
					"NextState": "NoRefund",
					"Meaning": "-",
					"Style": "-",
					"Utterance": "What?! I am not paying for this! I demand my money back!",
					"UtteranceId": "TTS-CDC7A0E65B1702C6318DC3661F8AFDD0"
				}, 
				{
					"CurrentState": "OrderResponse",
					"NextState": "OrderBurger",
					"Meaning": "-",
					"Style": "Rude",
					"Utterance": "Didn't you read the sign? This is a Burger-only restaurant",
					"UtteranceId": "TTS-F23FB46614504A16300F8F5AF98FB2E7"
				}, 
				{
					"CurrentState": "Wait",
					"NextState": "GetOrder",
					"Meaning": "-",
					"Style": "Rude",
					"Utterance": "You're lucky you're the only open restaurant at this time",
					"UtteranceId": "TTS-48B33826741CD77B145F245888915F71"
				}, 
				{
					"CurrentState": "GetOrder",
					"NextState": "Order",
					"Meaning": "-",
					"Style": "Polite",
					"Utterance": "Alright, sir, I can take your order now",
					"UtteranceId": "TTS-C2DEDB7D5579504CD0372DBE11ECCC41"
				}, 
				{
					"CurrentState": "GetOrder",
					"NextState": "Order",
					"Meaning": "-",
					"Style": "-",
					"Utterance": "Can I take your order?",
					"UtteranceId": "TTS-4FFD8CDAC94F5931DAFA38B9FF106E38"
				}, 
				{
					"CurrentState": "GetOrder",
					"NextState": "Order",
					"Meaning": "-",
					"Style": "Rude",
					"Utterance": "What do you want?",
					"UtteranceId": "TTS-CD74DBBB5430913FBE6AE47CE016DBF1"
				}, 
				{
					"CurrentState": "Wait",
					"NextState": "GetOrder",
					"Meaning": "-",
					"Style": "Rude",
					"Utterance": "I'll leave you a bad review on Yelp once I get my food",
					"UtteranceId": "TTS-4AFF3D72A10D10E0C4444B32A7D249EC"
				}, 
				{
					"CurrentState": "BurntBurger",
					"NextState": "DealWithBurntBurger",
					"Meaning": "-",
					"Style": "Rude",
					"Utterance": "This ain't no burger! You gave me a piece of coal!",
					"UtteranceId": "TTS-6116E7AA0132DFACBE261F7455261AB0"
				}, 
				{
					"CurrentState": "BurntBurger",
					"NextState": "DealWithBurntBurger",
					"Meaning": "-",
					"Style": "Polite",
					"Utterance": "Excuse me? The burger is completely burnt",
					"UtteranceId": "TTS-7127D1F0A6DAE66F7C927B9B195114E3"
				}, 
				{
					"CurrentState": "DealWithBurntBurger",
					"NextState": "OrderAgain",
					"Meaning": "-",
					"Style": "Rude",
					"Utterance": "Do I look like the chef to you?",
					"UtteranceId": "TTS-08875316D1DB7A4B6FD5C0A635F4E4F9"
				}, 
				{
					"CurrentState": "DealWithBurntBurger",
					"NextState": "OrderAgain",
					"Meaning": "-",
					"Style": "Polite",
					"Utterance": "Oh, I'm so sorry!",
					"UtteranceId": "TTS-32D67100EE95C92F2DD7C90409E02F8C"
				}, 
				{
					"CurrentState": "NoMoreBurgers",
					"NextState": "Refund",
					"Meaning": "-",
					"Style": "-",
					"Utterance": "Unfortunatly, we have no more burgers",
					"UtteranceId": "TTS-6549F5CA3906FC4CC42CCC3E5DFD462C"
				}, 
				{
					"CurrentState": "Leave1",
					"NextState": "End",
					"Meaning": "-",
					"Style": "Rude",
					"Utterance": "Yeah? Watch me.",
					"UtteranceId": "TTS-19A12EA9EC41D90C8277F63870486A59"
				}, 
				{
					"CurrentState": "StartWaiter",
					"NextState": "Order",
					"Meaning": "-",
					"Style": "Polite",
					"Utterance": "Hello, sir! Welcome to our restaurant",
					"UtteranceId": "TTS-8BE80DF13A83739AFDAB47D542C9EF39"
				}, 
				{
					"CurrentState": "LeaveResponse",
					"NextState": "Leave2",
					"Meaning": "-",
					"Style": "Rude",
					"Utterance": "Where do you think you're going? You owe us 5 bucks",
					"UtteranceId": "TTS-611CE79494B90F04722736158691C029"
				}, 
				{
					"CurrentState": "LeaveResponse",
					"NextState": "Leave1",
					"Meaning": "-",
					"Style": "-",
					"Utterance": "You can't leave without paying",
					"UtteranceId": "TTS-5E3F054F2CB75F9E9EDEE389FC948313"
				}, 
				{
					"CurrentState": "Leave2",
					"NextState": "Leave2Response",
					"Meaning": "-",
					"Style": "Rude",
					"Utterance": "And you owe me a burger",
					"UtteranceId": "TTS-76D5DAE84F18C6A58C9790FEE4A0BAEB"
				}, 
				{
					"CurrentState": "AnswerComplaint",
					"NextState": "Wait",
					"Meaning": "-",
					"Style": "Polite",
					"Utterance": "Sir, there are other custumers. You'll have to await your turn",
					"UtteranceId": "TTS-E93BA2B7D6832730D7301390A0C87C6F"
				}, 
				{
					"CurrentState": "Leave2",
					"NextState": "Leave2Response",
					"Meaning": "-",
					"Style": "-",
					"Utterance": "I didn't eat it, I ain't paying",
					"UtteranceId": "TTS-8FD161B48FDC1683C9143E54B3D37F2B"
				}, 
				{
					"CurrentState": "NoRefund",
					"NextState": "Leave",
					"Meaning": "-",
					"Style": "Rude",
					"Utterance": "Calm down, you Karen! Look, we can't give you your money back but how about a coupon for the next time you come over?",
					"UtteranceId": "TTS-95DB4E7E359BFAAF73B95D944D387504"
				}, 
				{
					"CurrentState": "Leave",
					"NextState": "LeaveResponse",
					"Meaning": "-",
					"Style": "Rude",
					"Utterance": "Unbelievable... I'm leaving",
					"UtteranceId": "TTS-6E3C82471447C2508D3F5A55F31E60B5"
				}, 
				{
					"CurrentState": "ServeFood",
					"NextState": "BurntBurger",
					"Meaning": "-",
					"Style": "Rude",
					"Utterance": "Have your damn burger",
					"UtteranceId": "TTS-F700963231F405AF73A939AD89B96FDD"
				}, 
				{
					"CurrentState": "OrderBurger",
					"NextState": "ServeFood",
					"Meaning": "-",
					"Style": "-",
					"Utterance": "I guess I'll order a burger, in that case",
					"UtteranceId": "TTS-E68CCAF6A2A959572DB5B8EB77DAB98D"
				}, 
				{
					"CurrentState": "ServeFood",
					"NextState": "BurntBurger",
					"Meaning": "-",
					"Style": "Polite",
					"Utterance": "Here's your order. I'm sorry for the delay",
					"UtteranceId": "TTS-36C8A2C0B1567E5DCD4A2286F099A0DE"
				}, 
				{
					"CurrentState": "NoRefund",
					"NextState": "Leave",
					"Meaning": "-",
					"Style": "Polite",
					"Utterance": "I understand your anger, but we have a no refund policy.",
					"UtteranceId": "TTS-A25640BC461CFE55DEEB4762626190D0"
				}, 
				{
					"CurrentState": "OrderAgain",
					"NextState": "NoMoreBurgers",
					"Meaning": "-",
					"Style": "Rude",
					"Utterance": "Just give me another burger. And make it fast",
					"UtteranceId": "TTS-D4B11FF6A5F974B6ABE835ECB2C65448"
				}],
			"Characters": [
				{
					"KnowledgeBase":
						{
							"Perspective": "Peter",
							"Knowledge":
								{
									"SELF":
										{
											"Has(Floor)": "Peter, 1",
											"Has(Food)": "False, 1",
											"DialogueState(Waiter)": "Start, 1",
											"CloseFriends(Waiter)": "False, 1",
											"Is(Hungry)": "1, 1",
											"Is(Angry)": "False, 1"
										}
								}
						},
					"BodyName": "Male",
					"VoiceName": "Voice1",
					"EmotionalState":
						{
							"Mood": 0,
							"initialTick": 0,
							"EmotionalPool": [],
							"AppraisalConfiguration":
								{
									"HalfLifeDecayConstant": 0.5,
									"EmotionInfluenceOnMoodFactor": 0.3,
									"MoodInfluenceOnEmotionFactor": 0.3,
									"MinimumMoodValueForInfluencingEmotions": 0.5,
									"EmotionalHalfLifeDecayTime": 15,
									"MoodHalfLifeDecayTime": 60
								}
						},
					"AutobiographicMemory":
						{
							"Tick": 0,
							"records": []
						},
					"OtherAgents":
						{
							"dictionary": []
						},
					"Goals": [
						{
							"Name": "Survive",
							"Significance": 5,
							"Likelihood": 0.5
						}]
				}, 
				{
					"KnowledgeBase":
						{
							"Perspective": "Waiter",
							"Knowledge":
								{
									"SELF":
										{
											"Has(Floor)": "Peter, 1",
											"Has(Burger)": "1, 1",
											"Has(Served)": "False, 1",
											"DialogueState(Peter)": "StartWaiter, 1",
											"CanServe(Peter)": "False, 1"
										}
								}
						},
					"BodyName": "",
					"VoiceName": "Voice1",
					"EmotionalState":
						{
							"Mood": 0,
							"initialTick": 0,
							"EmotionalPool": [],
							"AppraisalConfiguration":
								{
									"HalfLifeDecayConstant": 0.5,
									"EmotionInfluenceOnMoodFactor": 0.3,
									"MoodInfluenceOnEmotionFactor": 0.3,
									"MinimumMoodValueForInfluencingEmotions": 0.5,
									"EmotionalHalfLifeDecayTime": 15,
									"MoodHalfLifeDecayTime": 60
								}
						},
					"AutobiographicMemory":
						{
							"Tick": 0,
							"records": []
						},
					"OtherAgents":
						{
							"dictionary": []
						},
					"Goals": [
						{
							"Name": "Survive",
							"Significance": 5,
							"Likelihood": 0.2
						}]
				}],
			"WorldModel":
				{
					"Effects":
						{
							"dictionary": [
								{
									"key": "Event(Action-End, [s], Speak(*, [ns], *, *), [t])",
									"value": [
										{
											"PropertyName": "DialogueState([s])",
											"NewValue": "[ns]",
											"ObserverAgent": "[t]"
										}, 
										{
											"PropertyName": "Has(Floor)",
											"NewValue": "[t]",
											"ObserverAgent": "*"
										}, 
										{
											"PropertyName": "DialogueState([t])",
											"NewValue": "[ns]",
											"ObserverAgent": "[s]"
										}, 
										{
											"PropertyName": "Has(Served)",
											"NewValue": true,
											"ObserverAgent": "Waiter"
										}]
								}, 
								{
									"key": "Event(Action-End, [s], Speak(Wait, [ns], *, *), [t])",
									"value": [
										{
											"PropertyName": "DialogueState([s])",
											"NewValue": "[ns]",
											"ObserverAgent": "[t]"
										}, 
										{
											"PropertyName": "DialogueState([t])",
											"NewValue": "[ns]",
											"ObserverAgent": "[s]"
										}, 
										{
											"PropertyName": "Is(Angry)",
											"NewValue": true,
											"ObserverAgent": "Peter"
										}, 
										{
											"PropertyName": "Has(Floor)",
											"NewValue": "Waiter",
											"ObserverAgent": "*"
										}]
								}, 
								{
									"key": "Event(Action-End, [s], Speak(OrderBurger, [ns], *, *), [t])",
									"value": [
										{
											"PropertyName": "DialogueState([s])",
											"NewValue": "[ns]",
											"ObserverAgent": "[t]"
										}, 
										{
											"PropertyName": "DialogueState([t])",
											"NewValue": "[ns]",
											"ObserverAgent": "[s]"
										}, 
										{
											"PropertyName": "CanServe(Peter)",
											"NewValue": true,
											"ObserverAgent": "Waiter"
										}, 
										{
											"PropertyName": "Has(Floor)",
											"NewValue": "Peter",
											"ObserverAgent": "*"
										}, 
										{
											"PropertyName": "Is(Angry)",
											"NewValue": true,
											"ObserverAgent": "Peter"
										}]
								}, 
								{
									"key": "Event(Action-End, [s], Speak(BurntBurger, [ns], *, *), [t])",
									"value": [
										{
											"PropertyName": "DialogueState([s])",
											"NewValue": "[ns]",
											"ObserverAgent": "[t]"
										}, 
										{
											"PropertyName": "DialogueState([t])",
											"NewValue": "[ns]",
											"ObserverAgent": "[s]"
										}, 
										{
											"PropertyName": "Is(Hungry)",
											"NewValue": 2,
											"ObserverAgent": "Peter"
										}, 
										{
											"PropertyName": "Has(Floor)",
											"NewValue": "[t]",
											"ObserverAgent": "*"
										}]
								}, 
								{
									"key": "Event(Action-End, [s], Speak(NoMoreBurgers, [ns], *, *), [t])",
									"value": [
										{
											"PropertyName": "DialogueState([s])",
											"NewValue": "[ns]",
											"ObserverAgent": "[t]"
										}, 
										{
											"PropertyName": "DialogueState([t])",
											"NewValue": "[ns]",
											"ObserverAgent": "[s]"
										}, 
										{
											"PropertyName": "Has(Floor)",
											"NewValue": "[t]",
											"ObserverAgent": "*"
										}]
								}, 
								{
									"key": "Event(Action-End, *, Serve(Food), *)",
									"value": [
										{
											"PropertyName": "Has(Floor)",
											"NewValue": "Waiter",
											"ObserverAgent": "*"
										}, 
										{
											"PropertyName": "Has(Burger)",
											"NewValue": 0,
											"ObserverAgent": "Waiter"
										}, 
										{
											"PropertyName": "Has(Food)",
											"NewValue": true,
											"ObserverAgent": "Peter"
										}]
								}, 
								{
									"key": "Event(Action-End, [s], Speak(Leave1, [ns], *, *), [t])",
									"value": [
										{
											"PropertyName": "DialogueState([s])",
											"NewValue": "[ns]",
											"ObserverAgent": "[t]"
										}, 
										{
											"PropertyName": "DialogueState([t])",
											"NewValue": "[ns]",
											"ObserverAgent": "[s]"
										}, 
										{
											"PropertyName": "Is(Angry)",
											"NewValue": false,
											"ObserverAgent": "Peter"
										}, 
										{
											"PropertyName": "Has(Floor)",
											"NewValue": "[t]",
											"ObserverAgent": "*"
										}]
								}, 
								{
									"key": "Event(Action-End, [t], Give(BadReview), [s])",
									"value": []
								}]
						},
					"Priorities":
						{
							"dictionary": [
								{
									"key": "Event(Action-End, [s], Speak(*, [ns], *, *), [t])",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, [subject], Offer(Money), Player)",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, *, Offer, [target])",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, Charlie, Offer, Player)",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, [subject], Offer, [target])",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, *, Offer([value]), [target])",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, *, Serve(Food), [target])",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, [s], DuplicateSpeak(*, [ns], *, *), [t])",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, [s], DuplicateSpeak(BurntBurger, [ns], *, *), [t])",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, [s], Speak(Leave, [ns], *, *), [t])",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, *, Leave(Restaurant), *)",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, [s], Speak(End, [ns], *, *), [t])",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, [s], Speak(BurntBurger, [ns], *, *), [t])",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, [s], Speak(GetOrder, [ns], *, *), [t])",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, [s], Speak(OrderBurger, [ns], *, *), [t])",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, [s], Speak(NoMoreBurgers, [ns], *, *), [t])",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, [s], DuplicateSpeak(Wait, [ns], *, *), [t])",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, *, Serve(Food), *)",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, [s], DuplicateSpeak(OrderBurger, [ns], *, *), [t])",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, [s], Speak(Wait, [ns], *, *), [t])",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, [s], Speak(Leave1, [ns], *, *), [t])",
									"value": 1
								}, 
								{
									"key": "Event(Action-End, [t], Give(BadReview), [s])",
									"value": 1
								}]
						}
				}
		},
	"types": [
		{
			"TypeId": 0,
			"ClassName": "IntegratedAuthoringTool.IntegratedAuthoringToolAsset, IntegratedAuthoringTool, Version=1.7.0.0, Culture=neutral, PublicKeyToken=null"
		}]
}